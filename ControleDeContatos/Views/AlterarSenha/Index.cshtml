@using ControleDeContatos.Enums;
@model AlterarSenhaModel;

@{
    ViewData["Title"] = "Alterar senha do usuario";
}

<article>

    <h1 class="text-center">
        Alterar senha do usuario
    </h1>

    @if (TempData["MensagemSucesso"] != null)
    {
        <div class="alert alert-success" role="alert">
            <button type="button" class="btn btn-danger btn-sm close-alert" arial-label="close">x</button>
            @TempData["MensagemSucesso"]
        </div>
    }

    @if (TempData["MensagemErro"] != null)
    {
        <div class="alert alert-danger" role="alert">
            <button type="button" class="btn btn-danger btn-sm close-alert" arial-label="close">x</button>
            @TempData["MensagemErro"]
        </div>

    }

    <form asp-controller="AlterarSenha" asp-action="Alterar" method="post">

        <div class="mb-3">
            <label for="senha" class="form-label">Senha atual:</label>
            <input type="password" asp-for="SenhaAtual" class="form-control" placeholder="Digite a senha atual do usuario">
            @Html.ValidationMessageFor(x => x.SenhaAtual)
        </div>
        
        <div class="mb-3">
            <label for="NovaSenha" class="form-label">Nova senha:</label>
            <input type="password" asp-for="NovaSenha" class="form-control" placeholder="Digite a senha atual do usuario">
            @Html.ValidationMessageFor(x => x.NovaSenha)
        </div>
        <div class="mb-3">
            <label for="ConfirmarNovaSenha" class="form-label">Confirmar nova senha:</label>
            <input type="password" asp-for="ConfirmarNovaSenha" class="form-control" placeholder="Confirme a nova senha">
            @Html.ValidationMessageFor(x => x.ConfirmarNovaSenha)
        </div>

        <button type="submit" class="btn btn-primary btn-block">Alterar</button>
        <a class="btn btn-secondary  btn-block" asp-controller="Home" asp-action="index" role="button">Voltar</a>
    </form>

</article>
